# Copyright (C) 2010  Maksim Sipos <msipos@mailc.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

dump(header, code, init1, init2, init3, module_name, outfile)
  outfile.println(header)
  outfile.println(code)
  outfile.println("void init1_%a(){".f(module_name))
  outfile.println(init1)
  outfile.println("}")
  outfile.println("void init2_%a(){\n".f(module_name))
  outfile.println(init2)
  outfile.println("}\n")
  outfile.println("void init3_%a(){\n".f(module_name))
  outfile.println(init3)
  outfile.println("}\n")

go_bootstrap(files)
  header = ""
  code = ""
  init1 = ""
  init2 = ""
  init3 = ""

  asts = []

  for file in files
    ast = Ast.Node.new_from_file(file)
    asts.push(ast)
    Typer.absorb_info(ast)

  for ast in asts
    generate(ast, header, code, init1, init2, init3)

  tmp_c_file = TextFile.new(Os.temp_name("ripe", ".c"), TextFile.Write)
  dump(header, code, init1, init2, init3, "User", tmp_c_file)
  tmp_c_file.close()

main()
  options = [
    [&BOOTSTRAP, "-s", "--bootstrap", 0  , "bootstrap build"],
    [&HELP,      "-h", "--help", Opt.HELP, "display help"]
  ]

  args = Os.get_args()
  parsed, leftover = Opt.parse(args, options)

  mode = nil
  for opt in parsed
    switch opt[1]
      case &BOOTSTRAP
        mode = &BOOTSTRAP

  switch mode
    case &BOOTSTRAP
      go_bootstrap(leftover)
