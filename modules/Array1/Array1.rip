class Array1
  $
    Array1 a;
  $

  constructor new_const(n, val)
    $
      int64 n = val_to_int64(__n);
      @a.size = n;
      @a.alloc_size = n;
      @a.data = mem_malloc(sizeof(Value) * n);
      for (int64 i = 0; i < n; i++){
        @a.data[i] = __val;
      }
    $

  index(i)
    $
      if (obj_klass(__i) == klass_Range){
        Range* range = val_to_range(__i);
        int64 start, finish;
        util_index_range("Array1",
                         range,
                         @a.size,
                         &start,
                         &finish);
        if (start <= finish){
          Value v = array1_new(finish - start + 1);
          Array1* arr = obj_c_data(v);
          for (int64 i = start; i <= finish; i++){
            arr->data[i - start] = @a.data[i];
          }
          return v;
        } else {
          Value v = array1_new(start - finish + 1);
          Array1* arr = obj_c_data(v);
          for (int64 i = 0; i < start - finish + 1; i++){
            arr->data[i] = @a.data[start - i];
          }
          return v;
        }
      }
    $
    return $ array1_index(&(@a), val_to_int64(__i)) $

  index_set(i, val)
    $ array1_index_set(&(@a), val_to_int64(__i), __val); $

  push(val)
    $ array1_push(&(@a), __val); $

  pop()
    return $ array1_pop(&(@a)) $

  set_const(val)
    $
      int64 sz = @a.size;
      for (int64 i = 0; i < sz; i++){
        @a.data[i] = __val;
      }
    $

  to_string()
    $
      char buf[1024];
      buf[0] = 0;
      strcat(buf, "[");
      for (int i = 0; i < @a.size; i++){
        const char* str = to_string(@a.data[i]);
        strcat(buf, str);
        if (i != @a.size - 1) strcat(buf, ", ");
      }
      strcat(buf, "]");
      return string_to_val(buf);
    $

  virtual_get size()
    return $ int64_to_val(@a.size) $

  get_iter()
    return Array1Iterator.new(self)

class Array1Iterator
  private array
  private idx

  constructor new(array)
    @array = array
    @idx = 1

  iter()
    if @idx > @array.size
      return eof
    val = @array[@idx]
    @idx = @idx + 1
    return val
