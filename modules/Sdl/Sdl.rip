$ #include <SDL.h> $

module Sdl
  init()
    $
      if (SDL_Init(SDL_INIT_VIDEO) < 0){
        exc_raise("could not initialize SDL: %s", SDL_GetError());
      };
    $

  quit()
    $
      SDL_Quit();
    $

  get_ticks()
    return $ int64_to_val(SDL_GetTicks()) $

  const SWSURFACE = $ int64_to_val(SDL_SWSURFACE) $
  const ANYFORMAT = $ int64_to_val(SDL_ANYFORMAT) $

  class Surface
    $
      SDL_Surface *surf;
    $

    constructor new_screen(w, h, bd, flags)
      $ @surf = SDL_SetVideoMode(val_to_int64(__w),
                                 val_to_int64(__h),
                                 val_to_int64(__bd),
                                 val_to_int64(__flags));
      $

  loop_func(event_handlers)
    $
      SDL_Event ev;
      if (not SDL_PollEvent(&ev)){
        return VALUE_FALSE;
      }

      switch(ev.type){
        case SDL_MOUSEMOTION:
    $
    if event_handlers.has_key?("sdl-mouse-motion")
      call_func(event_handlers["sdl-mouse-motion"], $ int64_to_val(ev.motion.x) $, $ int64_to_val(ev.motion.y) $)
    $
          return VALUE_TRUE;
        case SDL_QUIT:
    $
    if event_handlers.has_key?("sdl-quit")
      call_func(event_handlers["sdl-quit"])
    $
          return VALUE_TRUE;
      }
    $
    return true
