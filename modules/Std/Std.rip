$
  #include <stdio.h>
  #include <stdlib.h>
$


namespace Std
  sprintln(*args)
    return Std.sprintln_tuple(args)

  sprintln_tuple(t)
    $
      Tuple* tuple = val_to_tuple(__t);
      uint64 len = format_simple(NULL,tuple->size, tuple->data);
      char out[len+1];
      format_simple(out, tuple->size, tuple->data);
      out[len] = '\n';
      return string_to_val(out);
    $

  sprint(*args)
    return Std.sprint_tuple(args)

  sprint_tuple(t)
    $
      Tuple* tuple = val_to_tuple(__t);
      uint64 len = format_simple(NULL,tuple->size, tuple->data);
      char out[len];
      format_simple(out, tuple->size, tuple->data);
      return string_to_val(out);
    $

  sprintf(format, *args)
    return Std.sprintf_tuple(format, args)

  sprintf_tuple(format, array)
    $
      char* f = val_to_string(__format);
      Tuple* array = val_to_tuple(__array);
      uint64 len = format(NULL, f, array->size, array->data);
      char out[len];
      format(out, f, array->size, array->data);
      return string_to_val(out);
    $
